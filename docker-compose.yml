version: '3.8'

services:
  # FastAPI Application
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://library_user:library_pass@db:5432/library_db
      - SECRET_KEY=your-super-secret-key-change-in-production
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - ENVIRONMENT=development
    volumes:
      - ./app:/app/app  # Hot reload for development
      - ./tests:/app/tests
    depends_on:
      - db
      - redis
    networks:
      - library_network
    restart: unless-stopped
    user: root

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=library_db
      - POSTGRES_USER=library_user
      - POSTGRES_PASSWORD=library_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - library_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U library_user -d library_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - library_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # pgAdmin for database management (development only)
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@library.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - library_network
    profiles:
      - dev

volumes:
  postgres_data:
  redis_data:

networks:
  library_network:
    driver: bridge